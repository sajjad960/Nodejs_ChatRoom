[{"/home/sajjad/Desktop/My-working-Directory/NODE-JS-CHAT/client/src/index.js":"1","/home/sajjad/Desktop/My-working-Directory/NODE-JS-CHAT/client/src/reportWebVitals.js":"2","/home/sajjad/Desktop/My-working-Directory/NODE-JS-CHAT/client/src/App.js":"3","/home/sajjad/Desktop/My-working-Directory/NODE-JS-CHAT/client/src/UserContext.js":"4","/home/sajjad/Desktop/My-working-Directory/NODE-JS-CHAT/client/src/components/chat/Chat.js":"5","/home/sajjad/Desktop/My-working-Directory/NODE-JS-CHAT/client/src/components/home/Home.js":"6","/home/sajjad/Desktop/My-working-Directory/NODE-JS-CHAT/client/src/components/layout/Navbar.js":"7","/home/sajjad/Desktop/My-working-Directory/NODE-JS-CHAT/client/src/components/home/RoomList.js":"8","/home/sajjad/Desktop/My-working-Directory/NODE-JS-CHAT/client/src/components/home/Room.js":"9","/home/sajjad/Desktop/My-working-Directory/NODE-JS-CHAT/client/src/components/chat/messages/Messages.js":"10","/home/sajjad/Desktop/My-working-Directory/NODE-JS-CHAT/client/src/components/chat/message/Message.js":"11","/home/sajjad/Desktop/My-working-Directory/NODE-JS-CHAT/client/src/components/chat/input/Input.js":"12","/home/sajjad/Desktop/My-working-Directory/NODE-JS-CHAT/client/src/components/auth/Login.js":"13","/home/sajjad/Desktop/My-working-Directory/NODE-JS-CHAT/client/src/components/auth/Signup.js":"14","/home/sajjad/Desktop/My-working-Directory/NODE-JS-CHAT/client/src/utils/helpers.js":"15"},{"size":734,"mtime":1648388066177,"results":"16","hashOfConfig":"17"},{"size":362,"mtime":1606887428000,"results":"18","hashOfConfig":"17"},{"size":1617,"mtime":1640931044638,"results":"19","hashOfConfig":"17"},{"size":86,"mtime":1606896224000,"results":"20","hashOfConfig":"17"},{"size":2517,"mtime":1641127908139,"results":"21","hashOfConfig":"17"},{"size":3534,"mtime":1641127903381,"results":"22","hashOfConfig":"17"},{"size":1443,"mtime":1641028196409,"results":"23","hashOfConfig":"17"},{"size":439,"mtime":1640666311668,"results":"24","hashOfConfig":"17"},{"size":312,"mtime":1607095678000,"results":"25","hashOfConfig":"17"},{"size":516,"mtime":1640841327506,"results":"26","hashOfConfig":"17"},{"size":695,"mtime":1640837971549,"results":"27","hashOfConfig":"17"},{"size":565,"mtime":1640839562660,"results":"28","hashOfConfig":"17"},{"size":2755,"mtime":1640927980974,"results":"29","hashOfConfig":"17"},{"size":3244,"mtime":1640895438281,"results":"30","hashOfConfig":"17"},{"size":178,"mtime":1648388532127,"results":"31","hashOfConfig":"17"},{"filePath":"32","messages":"33","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1hthf0f",{"filePath":"34","messages":"35","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"36","messages":"37","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"38","messages":"39","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"40","messages":"41","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42"},{"filePath":"43","messages":"44","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45"},{"filePath":"46","messages":"47","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48"},{"filePath":"49","messages":"50","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"51","messages":"52","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"53","messages":"54","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"55","messages":"56","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"57","messages":"58","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"59","messages":"60","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61"},{"filePath":"62","messages":"63","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"64","messages":"65","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/sajjad/Desktop/My-working-Directory/NODE-JS-CHAT/client/src/index.js",[],"/home/sajjad/Desktop/My-working-Directory/NODE-JS-CHAT/client/src/reportWebVitals.js",[],"/home/sajjad/Desktop/My-working-Directory/NODE-JS-CHAT/client/src/App.js",[],"/home/sajjad/Desktop/My-working-Directory/NODE-JS-CHAT/client/src/UserContext.js",[],"/home/sajjad/Desktop/My-working-Directory/NODE-JS-CHAT/client/src/components/chat/Chat.js",["66","67","68","69","70"],"import React, { useContext, useEffect, useState } from 'react';\nimport { UserContext } from '../../UserContext';\nimport { Link, Redirect, useParams } from 'react-router-dom';\nimport { io } from \"socket.io-client\";\nimport Messages from './messages/Messages';\nimport Input from './input/Input'\nimport './Chat.css'\nimport { hostAddress } from '../../utils/helpers';\nlet socket;\n\nconst Chat = () => {\n    const { user, setUser } = useContext(UserContext)\n    const {room_id, room_name} = useParams()\n    const [message, setMessage] = useState('')\n    const [messages, setMessages] = useState([])\n\n\n    const ENDPT = 'localhost:5000';\n    useEffect(() => {\n        const getingMessage =async () => {\n            try {\n                const res = await fetch(`${hostAddress}/messages/${room_id}`, {\n                  method: 'GET',\n                  credentials: 'same-origin',\n                  // body: JSON.stringify({token}),\n                  headers: { 'Content-Type': 'application/json'\n                }});\n                const data = await res.json();\n                if(data.messages) {\n                    setMessages(data.messages)\n                }\n              } catch (error) {\n                  \n                console.log(error)\n              }\n        }\n\n       \n        getingMessage()\n       \n    }, [room_id])\n\n    useEffect(() => {\n        socket = io(\"api.chatroom.findsajjad.com\");        \n            console.log('I am calling');\n            if(!user) {\n                return alert('Please login or Singup')\n            }\n            socket.emit('join', {name: user.name, room_id, user_id: user._id})\n        \n    }, []);\n\n    useEffect(() => {\n      socket.on('message', message => {\n          setMessages([...messages, message])\n      })\n    }, [messages])\n\n    const sendMessage = e => {\n        e.preventDefault();\n\n        if(message) {\n            console.log(message);\n            socket.emit('sendMessage', message, room_id)\n            setMessage('')\n        }\n    }\n    if(!user) {\n        return (\n            <Redirect to='/'/>\n        )\n    }\n\n    return (\n        <div className='outerContainer'>\n            {/* <div>{room_id}, {room_name}</div>\n            <h1>Chat {JSON.stringify(user)}</h1> */} \n          <div className=\"container\">\n\n            <Messages messages={messages} user_id={user._id}/>\n            <Input message={message}\n             setMessage={setMessage}\n             sendMessage={sendMessage} />\n          </div>\n        </div>\n    )\n}\n\nexport default Chat\n","/home/sajjad/Desktop/My-working-Directory/NODE-JS-CHAT/client/src/components/home/Home.js",["71","72"],"import React, { useContext, useEffect, useState } from 'react';\nimport { UserContext } from '../../UserContext';\nimport { Link } from 'react-router-dom';\nimport RoomList from './RoomList';\nimport { io } from \"socket.io-client\";\nimport { hostAddress } from '../../utils/helpers';\nlet socket;\n\n\nconst Home = () => {\n    \n    const ENDPT = 'api.chatroom.findsajjad.com';\n    // useEffect(() => {\n    //     socket = io.connect('localhost:10000', {secure: true});\n    // }, [])\n    useEffect(() => {\n        socket = io(\"api.chatroom.findsajjad.com\");\n\n        return () => {\n            socket.emit('disconnected');\n            socket.off()\n        }\n    }, [ENDPT]);\n\n    const { user, setUser } = useContext(UserContext);\n    const [room, setRoom] = useState('')\n    const [rooms, setRooms] = useState([])\n\n    const handleSubmit = e => {\n        e.preventDefault();\n        socket.emit('create-room', room);\n        console.log(room);\n        setRoom('')\n\n    }\n    useEffect(() => {\n        socket.on('output-rooms', rooms => {\n            setRooms(rooms)\n        })\n    }, [])\n    \n    useEffect(() => {\n        socket.on('room-created', room => {\n            setRooms([...rooms, room])\n        })\n    }, [rooms])\n    // const rooms = [\n    //     {\n    //         name: 'room1',\n    //         _id: '123'\n    //     },\n    //     {\n    //         name: 'room2',\n    //         _id: '456'\n    //     }\n    // ]\n    // const setAsJohn = () => {\n    //     const john = {\n    //         name: 'John',\n    //         email: 'john@email.com',\n    //         password: '123',\n    //         id: '123'\n    //     }\n    //     setUser(john);\n    // }\n    // const setAsTom = () => {\n    //     const tom = {\n    //         name: 'Tom',\n    //         email: 'tom@email.com',\n    //         password: '456',\n    //         id: '456'\n    //     }\n    //     setUser(tom);\n    // }\n    return (\n        <div>\n            <div className=\"row\">\n                <div className=\"col s12 m6\">\n                    <div className=\"card blue-grey darken-1\">\n                        <div className=\"card-content white-text\">\n                            <span className=\"card-title\">Welcome {user ? user.name : ''}</span>\n                            <form onSubmit={handleSubmit}>\n                                <div className=\"row\">\n                                    <div className=\"input-field col s12\">\n                                        <input\n                                            placeholder=\"Enter a room name\"\n                                            id=\"room\" type=\"text\" value={room} onChange={e => setRoom(e.target.value)} className=\"validate\" />\n                                        <label htmlFor=\"room\">Room</label>\n                                    </div>\n                                </div>\n                                <button className=\"btn\">Create Room</button>\n                            </form>\n                        </div>\n                        <div className=\"card-action\">\n                            {/* <a href=\"#\" onClick={setAsJohn}>set as John</a>\n                            <a href=\"#\" onClick={setAsTom}>set as Tom</a> */}\n                        </div>\n                    </div>\n                </div>\n                <div className=\"col s6 m5 offset-1\">\n                    <RoomList rooms={rooms} />\n                </div>\n            </div>\n\n            <Link to={'/chat'}>\n                <button>go to chat</button>\n            </Link>\n        </div>\n    )\n}\n\nexport default Home\n","/home/sajjad/Desktop/My-working-Directory/NODE-JS-CHAT/client/src/components/layout/Navbar.js",["73"],"import React, { useContext } from 'react'\nimport { Link, Redirect } from 'react-router-dom';\nimport { UserContext } from '../../UserContext';\n\n\nconst Navbar = () => {\n    const { user, setUser } = useContext(UserContext);\n\n    const logout = () => {\n        setUser('')\n        localStorage.removeItem('jwt')\n        return (\n            <Redirect to='/'/>\n        )\n    }\n\n\n    return (\n        <>\n            <nav className=\"green\">\n                <div className=\"nav-wrapper\">\n                    <a href=\"/\" className=\"brand-logo\">Chat</a>\n                    <a href=\"#\" data-target=\"mobile-demo\" class=\"sidenav-trigger\"><i class=\"material-icons\">menu</i></a>\n\n                    <ul id=\"nav-mobile\" className=\"right hide-on-med-and-down\">\n                        <li><Link to='/login'>Login</Link></li>\n                        <li><Link to='/signup'>Signup</Link></li>\n                        {\n                         user ? <li><a href='/' onClick={logout}>Logout</a></li> : ''\n                        }\n                    </ul>\n                </div>\n            </nav>\n            <ul class=\"sidenav\" id=\"mobile-demo\">\n                <li><Link to='/login'>Login</Link></li>\n                <li><Link to='/signup'>Signup</Link></li>\n                {\n                    user ? <li><a href='/' onClick={logout}>Logout</a></li> : ''\n                }\n                \n            </ul>\n        </>\n\n    )\n}\n\nexport default Navbar\n","/home/sajjad/Desktop/My-working-Directory/NODE-JS-CHAT/client/src/components/home/RoomList.js",[],"/home/sajjad/Desktop/My-working-Directory/NODE-JS-CHAT/client/src/components/home/Room.js",[],"/home/sajjad/Desktop/My-working-Directory/NODE-JS-CHAT/client/src/components/chat/messages/Messages.js",[],"/home/sajjad/Desktop/My-working-Directory/NODE-JS-CHAT/client/src/components/chat/message/Message.js",[],"/home/sajjad/Desktop/My-working-Directory/NODE-JS-CHAT/client/src/components/chat/input/Input.js",[],"/home/sajjad/Desktop/My-working-Directory/NODE-JS-CHAT/client/src/components/auth/Login.js",["74","75"],"import React, { useContext, useState } from 'react'\nimport { hostAddress } from '../../utils/helpers';\nimport { UserContext } from '../../UserContext';\nimport { Redirect } from 'react-router-dom';\n\n\nconst Login = () => {\n    const [name, setName] = useState('')\n    const [email, setEmail] = useState('')\n    const [password, setPassword] = useState('')\n    const [nameError, setNameError] = useState('')\n    const [emailError, setEmailError] = useState('')\n    const [passwordError, setPasswordError] = useState('')\n\n    const { user, setUser } = useContext(UserContext);\n\n\n    const submitHandler = async e => {\n        e.preventDefault();\n\n        // clear error message\n        setEmailError('')\n        setNameError('')\n        setPasswordError('')\n\n        console.log(name, email, password)\n        const res = await fetch(`${hostAddress}/login`, {\n            method: 'POST',\n            credentials: \"same-origin\",\n            body: JSON.stringify({name, email, password}),\n            headers: {'Content-type': 'application/json'}\n        })\n\n        const data = await res.json();\n        console.log(data);\n\n        if(data.errors) {\n            setEmailError(data.errors.email);\n            setNameError(data.errors.name);\n            setPasswordError(data.errors.password);\n        }\n        if(data.user) {\n            setUser(data.user)\n            localStorage.setItem('jwt', data.token)\n        }\n\n    }\n\n    if(user) {\n        return <Redirect to='/'/>\n    }\n    return (\n\n        <div className=\"row\">\n            <form className=\"col s12\" onSubmit={submitHandler}>\n                \n                <div className=\"row\">\n                    <div className=\"input-field col s12\">\n                        <input id=\"email\" type=\"email\" className=\"validate\"\n                            value={email}\n                            onChange={e => setEmail(e.target.value)}\n                        />\n                        <div className=\"email error red-text\">{emailError}</div>\n                        <label htmlFor=\"email\">Email</label>\n                    </div>\n                </div>\n                <div className=\"row\">\n                    <div className=\"input-field col s12\">\n                        <input id=\"password\" type=\"password\" className=\"validate\"\n                            value={password}\n                            onChange={e => setPassword(e.target.value)}\n                        />\n                        <div className=\"password error red-text\">{passwordError}</div>\n                        <label htmlFor=\"password\">Password</label>\n                    </div>\n                </div>\n\n                <button className=\"btn\">Sign up</button>\n            </form>\n        </div>\n\n    )\n}\n\nexport default Login\n","/home/sajjad/Desktop/My-working-Directory/NODE-JS-CHAT/client/src/components/auth/Signup.js",[],"/home/sajjad/Desktop/My-working-Directory/NODE-JS-CHAT/client/src/utils/helpers.js",[],{"ruleId":"76","severity":1,"message":"77","line":3,"column":10,"nodeType":"78","messageId":"79","endLine":3,"endColumn":14},{"ruleId":"76","severity":1,"message":"80","line":12,"column":19,"nodeType":"78","messageId":"79","endLine":12,"endColumn":26},{"ruleId":"76","severity":1,"message":"81","line":13,"column":21,"nodeType":"78","messageId":"79","endLine":13,"endColumn":30},{"ruleId":"76","severity":1,"message":"82","line":18,"column":11,"nodeType":"78","messageId":"79","endLine":18,"endColumn":16},{"ruleId":"83","severity":1,"message":"84","line":51,"column":8,"nodeType":"85","endLine":51,"endColumn":10,"suggestions":"86"},{"ruleId":"76","severity":1,"message":"87","line":6,"column":10,"nodeType":"78","messageId":"79","endLine":6,"endColumn":21},{"ruleId":"76","severity":1,"message":"80","line":25,"column":19,"nodeType":"78","messageId":"79","endLine":25,"endColumn":26},{"ruleId":"88","severity":1,"message":"89","line":23,"column":21,"nodeType":"90","endLine":23,"endColumn":83},{"ruleId":"76","severity":1,"message":"91","line":8,"column":18,"nodeType":"78","messageId":"79","endLine":8,"endColumn":25},{"ruleId":"76","severity":1,"message":"92","line":11,"column":12,"nodeType":"78","messageId":"79","endLine":11,"endColumn":21},"no-unused-vars","'Link' is defined but never used.","Identifier","unusedVar","'setUser' is assigned a value but never used.","'room_name' is assigned a value but never used.","'ENDPT' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'room_id' and 'user'. Either include them or remove the dependency array.","ArrayExpression",["93"],"'hostAddress' is defined but never used.","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/blob/HEAD/docs/rules/anchor-is-valid.md","JSXOpeningElement","'setName' is assigned a value but never used.","'nameError' is assigned a value but never used.",{"desc":"94","fix":"95"},"Update the dependencies array to be: [room_id, user]",{"range":"96","text":"97"},[1640,1642],"[room_id, user]"]